#!/bin/sh -e

set -eu

# This script spoofs or resets the MAC address of all NICs given as
# arguments according to the setting in Tails Greeter. The default (i.e
# before Tails Greeter has been run) is to enable MAC spoofing.

. /usr/local/lib/tails-shell-library/hardware.sh
. /usr/local/lib/tails-shell-library/log.sh
. /usr/local/lib/tails-shell-library/tails_greeter.sh

# Only use this helper when using macchanger options that may require
# the interface to be down, i.e. those that actually change the MAC
# address.
# Note that we (for simplicity) specify the interface as the first
# argument.
macchanger_helper() {
    local nic
    local opts
    local was_up
    local ret
    local msg
    nic=$1
    shift
    opts=$*
    was_up=no
    if nic_is_up ${nic}; then
        was_up=yes
        if ! /sbin/ifconfig ${nic} down; then
            log "failed to down ${nic}"
            return 1
        fi
    fi
    msg=$(macchanger ${opts} ${nic} 2>&1 >/dev/null)
    ret=$?
    if [ "${ret}" -ne 0 ]; then
        log "macchanger returned error code ${ret} and reported: ${msg}"
    fi

    if [ "${was_up}" = yes ]; then
        if ! /sbin/ifconfig ${nic} up; then
            log "failed to up ${nic}"
            return 1
        fi
    fi
    return ${ret}
}

spoof_mac() {
    macchanger_helper -e $1
}

set_log_tag spoof-mac

NIC=${1}

if ! mac_spoof_is_enabled; then
    exit 0
fi

log "Trying to spoof MAC address of NIC ${NIC}..."

if ! nic_exists ${NIC}; then
    log "NIC ${NIC} doesn't exist, skipping"
    exit 1
fi

if nic_has_spoofed_mac ${NIC}; then
    log "NIC ${NIC}'s MAC address is already spoofed, skipping"
    exit 0
else
    if spoof_mac ${NIC}; then
        log "Successfully spoofed MAC address of NIC ${NIC}"
    else
        log "Something went wrong while trying to spoof MAC address of NIC ${NIC}"
    fi
fi
