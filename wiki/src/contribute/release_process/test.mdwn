[[!toc levels=1]]

# Changes

Keeping an eye on the changes between released versions is one of the
many safeguards against releasing crap.

## Source

Thanks to Git tags one can easily compare the to-be-released source
code with previous version's one e.g.:

	git diff 0.6.1..stable

## Result

`wdiff -l` makes it easy to compare the list of bundled packages and
versions with the one shipped last time e.g.:

	wdiff -l wiki/src/torrents/files/tails-i386-lenny-0.6.1.packages \
	  tails-i386-lenny-0.7.packages | less

Check the output for:

- new packages that may cause harm or make the images unnecessarily
  big
- packages that could be erroneously removed
- new versions of software we might not have audited yet (including:
  does the combination of our configuration with software X version
  Y+1 achieve the same wished results as with software X version Y?)

## Image size

Check the image size has not changed much since the last release.

# Iceweasel

* is web browsing really torified?
 - <https://check.torproject.org/>
 - <http://monip.org/>
* does the exposed User-Agent match the generic Torbutton's one?
  (connect to a website you can check the access logs for)
* Browsing (by IP) a HTTP/HTTPS server on the LAN should be possible.
* Browsing (by IP) a FTP server on the LAN should be possible.
* Entering `about:plugins` in the location bar should say no plugin is
  installed.
* Does playing HTML5 videos work? In particular, (due to its popularity)
  do [youtube](http://www.youtube.com) videos work?

# Pidgin

* pidgin: is an IRC session really torified?
 - if you are running an IRC server: check there
 - else: see if the connection to the IRC server appears in Vidalia
   connections list
* Check OTR is working.
* Check at least IRC and XMPP are working.
* Check if pidgin doesn't leak to many informations on replying to different
  CTCP requests:
  * Start Tails and launch pidgin once done. Connect to an IRC server where you're already on
  * try to /ctcp <T(A)ILS_account_nick> COMMAND
  (for a list of commands, see [this page](http://www.wikkedwire.com/irccommands)).

# Tor enforcement

* firewall: is the Tor-enforcement effective?
 - check output of `iptables -L -n -v`
 - check output of `iptables -t nat -L -n -v`
 - try connecting to the Internet after unsetting `$http_proxy` and
   `$HTTP_PROXY` using a piece of software that does not obey the
   GNOME proxy settings, *and* is not explicitely torified in Tails:
   `unset http_proxy ; unset HTTP_PROXY ; wget --no-proxy
   http://monip.org` (should result in a "`Connection refused`".
* firewall: is IPv6 traffic blocked?
 - check output of `ip6tables -L -n`
 - at a place with working IPv6: try connecting to a known-working
   IPv6-enabled server on its IPv6 address over TCP and icmp6.
* is `/etc/resolv.conf` OK both before/after DHCP has been setup? it should
  *always* read `nameserver 127.0.0.1`
* verify that all destinations reached from an intensive Tails session
  are tor routers or authorities: Boot Tails without the network
  in. Start dumping your whole session's network activity with `sudo
  tcpdump -i any -w dump` (or better, do the dump on another machine,
  or on the host OS if Tails is running in a VM). Next, plug the
  network and do *a lot* of network stuff (why not run do this while
  doing all the other tests?). Then check that all destinations,
  e.g. by using tshark and the script below:

(ignore this line, ikiwiki is buggy...)

    DESCRIPTORS=/var/lib/tor/cached-descriptors
    # Note that these default directory authorities may change! To be
    # sure, check in Tor's source, src/or/config.c:~900
    DIR_AUTHS="
    128.31.0.39 86.59.21.38 194.109.206.212 82.94.251.203 216.224.124.114
    212.112.245.170 193.23.244.244 208.83.223.34 213.115.239.118"
    tshark -r dump -T fields -e ip.dst | sort | uniq | \
    while read x; do
        ip_expr=$(echo ${x} | sed -e "s@\.@\\\.@g")
        if echo ${DIR_AUTHS} | grep -qe ${ip_expr}; then
            continue
        fi
        if ! grep -qe "^router [^ ]\+ ${ip_expr}" ${DESCRIPTORS}; then
            echo "${x} is bad"
        fi
    done

  Note that this script will produce some false positives, like your
  gateway, broadcasts, etc. Also note that running I2P during these
  test will list every I2P peer as "bad", so that is not recommended.

# Use of untrusted partitions

* are any local hard-disk partitions mounted or used as swap?
  boot on a (possibly virtual) machine that has a cleartext swap
  partition not managed by LVM. This swap partition must not be used
  by Tails.
* is a Live system found on a local hard-disk partition used? boot the
  DVD/USB stick you are testing on a (possibly virtual) machine that
  has a Tails system copied on a cleartext partition not managed by
  LVM. The DVD/USB ramdisk must use the Tails system found on the
  DVD/USB, and not the one found on the hard disk. (Also check that
  without Tails, that other Live system boots.)

# Claws

* Check mail over IMAP.
* Send an email.
* Check that the profile works and is torified (specifically the
  EHLO/HELO SMTP messages it sends). Send an email using Claws and a
  non-anonymizing SMTP relay. Then check that email's headers once
  received, especially the `Received:` and `Message-ID:` ones.
* Also check that the EHLO/HELO SMTP message is not leaking anything
  with a packet sniffer: start Claws using the panel icon (which runs
  `torify claws-mail`) to
  avoid using the transparent proxy (which will confuse tcpdump).
  Disable SSL/TLS for SMTP in Claws (so take precautions for not
  leaking your password in plaintext by either changing it temporarily
  or using a disposable account). Then run `sudo tcpdump -i lo -w
  dump` to capture the packets before Tor encrypts it, and check the
  dump for the HELO/EHLO message and verify that it only contains
  `localhost`.

# Whisperback

* can a bug report e-mail be sent?
* is it correctly encrypted?

# GnuPG

Those tests shall be run using GnuPG from the command-line and through
the Seahorse GUI:

* key search/receive: torified? going to the configured keyserver?
 - `gpg --search` tells what server it is connecting to
 - the connection to the configured keyserver must appear in Vidalia's
   list of connections
 - if you run a keyserver, have a look there.

# Monkeysphere

* Monkeysphere validation agent key search/receive: torified? uses
  configured keyserver?

# Time



1. `sudo rm /var/run/htpdate/success /var/run/tordate/done /var/lib/tor/cached-descriptors`
2. disconnect the network cable
3. set the time to an obviously wrong one :

           date --set="Mon, 01 Mar 2000 15:45:34 - 0800"

4. connect the network cable

=> the date should be corrected and Tor/Vidalia should start
correctly.

# erase memory on shutdown

- check that `memlockd` and `udev-watchdog` are running, and that the right
  device is being watched by the later.
- remove Tails' media (USB and cdrom) and check that the memory
  erasure process is started (`Loading new kernel`, at least).

Testing that the needed files are really mapped in memory, and the
erasing process actually works, involves slightly more complicated
steps that are worth [[a dedicated page|test/erase_memory_on_shutdown]].

# Root access control

* Check you can't login as root;
* Boot Tails without setting a password and check you can't sudo nor get
  PolicyKit administrative privileges;
* Boot Tails with a password and check you can sudo and get PolicyKit
  administrative privileges.
* Check that the $TAILS_USER_PASSWORD variable, if still existing in the system
  environment after the boot has finished, does not contain the clear text
  password.

# Virtualization support

* `modinfo vboxguest` should work
* test in VirtualBox

# I2P

* Make sure that I2P is up-to-date, at least if the
  [changelogs](http://www.i2p2.de/announcements.html) mention that
  security critical bugs were fixed.
* Check that "Applications -> Internet -> I2P" works:
  - You get the "Starting I2P..." pop-up.
  - The router console opens in Iceweasel upon success.
  - You get the "I2P failed to start" pop-up on failure (e.g. no
    network so tordate failed).
* Check that I2P connects to the network:
  - The numbers in the "Peers" section of the router console should be
    non-zero.
  - You should get "Network: Firewalled" in the "General" section
    (implying that the I2P network is reachable but UDP is blocked).
* Check that you can reach some eepsites within Iceweasel, like
  <http://www.i2p2.i2p> and <http://forum.i2p>.
* Check that you can connect to the I2P IRC server through Pidgin.

# Git

* clone a repository over dumb transport (`git://`)
* clone a repository over SSH

# USB Installer/Upgrader

* Test "Clone & Install":
  - from DVD.
  - from USB.
* Test "Clone & Upgrade" (onto a USB install containing an older
  Tails):
  - from DVD.
  - from USB.
  - make sure to test that TailsData partitions survive upgrades.
* Test "Upgrade from ISO".
  - make sure to test that TailsData partitions survive upgrades.

# Persistence

* Activate persistence on a Tails USB install with all presets
  on.
* Reboot, enable persistence. Verify via `mount` that each preset has
  a mount that seem correct (e.g. "Pidgin preset =>
  `/home/amnesia/.purple` has something mounted on it").
* Try read-write mode. Make sure that persistent files are writeable,
  and that changes do survive reboot.
* Try read-only mode. Make sure that persistent files are writeable,
  but that no changes survive reboot.
* Test adding a few custom directories.
* Turn off some persistence presets, reboot, and make sure they are
  not activated.

# Misc

* Set a sudo password in Tails Greeter and verify that it works.
* Check that there are no weird applications listening to external
  connections with `sudo netstat -ltupn` (everything should be
  `127.0.0.1` (IPv4) or `::1` (IPv6)).
* Check that links to the online website (`Mirror:`) at the bottom of
  bundled static web pages are working. Else, it probably means the
  wiki was not built with the needed patched ikiwiki version.
* Check that all seems well during init (mostly that all services
  start without errors), and that dmesg seems ok.
* Boot without network connection, and then plug it in after
  some arbitrary time; Tor and Vidalia must be autostarted and end up
  in working state.
* Doing an apt-get update and installing random packages.
* Boot on bare-metal on USB and DVD.
* Boot and check basic functionality is working for every supported
  language. The virtual keyboard must work and be auto-configured to
  use the same keyboard layout as the X session.
* Try to start with the `truecrypt` option on boot, see if it can be found in
  the *Applications* → *Accessories* menu and that it runs correctly.
* Connecting over SSH to a server on the Internet should work (and
  appear in Vidalia's connections list).
* Connecting (by IP) over SSH to a server on the LAN should work.
* The `amnesia` user must be part of the following groups:
  `audio cdrom dialout floppy video plugdev netdev fuse debian-tor scanner lp lpadmin vboxsf`
* Measure boot time on some reference bare metal hardware, and compare
  with previous version. The new one should not be significantly
  slower to start.
