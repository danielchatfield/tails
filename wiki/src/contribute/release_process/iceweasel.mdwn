[[!toc levels=2]]

New Firefox release
===================

If Iceweasel was not updated to match the new Firefox release we want,
a bit more work is needed.

* Download the Firefox tarball and detached signature.
* Check the signature.
* Extract the tarball.
* `cd` into the extracted directory.
* Copy the `debian/` directory from our previous package into the new
  upstream source directory.
* Use `dch` to add a `debian/changelog` entry matching the new
  upstream version.
* Download and repack the other tarballs:

  	make -f debian/rules download

* `cd` into our Iceweasel Git directory.
* Checkout the `tails/master` branch.
* Get yourself a new upstream branch:

  	git branch -d upstream && \
  	git branch upstream tails/master

* Trick the tarball importer to import the correct version:

  	cp mozilla-esr17/browser/config/version.txt git/browser/config/
  	cp mozilla-esr17/debian/changelog git/debian/

* Import the new upstream release into the `upstream` branch:

  	make -f debian/rules import

* Merge the import commit into `tails/master`:

  	git reset --hard && \
  	git checkout tails/master && \
	git merge upstream

* Get the `debian` directory back:

  	git checkout HEAD^ -- debian
  	git commit -m 'Get Debian packaging directory back.'

* Cleanup quilt status:

  	rm -rf .pc

* Apply all quilt patches:

  	quilt push -a

New iceweasel release
=====================

FIXME: add missing steps to merge iceweasel's updated Git if possible,
to import the source package into Git else.

Update Torbrowser patches
=========================

* Make sure all quilt patches are applied.
* Unapply all Torbrowser patches: use `quilt pop` as many times
  as needed.
* Remove all Torbrowser patches from the series:

  	quilt unapplied | xargs -n 1 quilt delete

* Remove Torbrowser patches from Git:

  	git rm -r debian/patches/torbrowser/

* Commit.
* Import the latest TBB patches:

  	export TBB_SRC=XXX_PATH_TO_TBB_SRC_XXX
  	for patch in $(\ls --reverse ${TBB_SRC}/src/current-patches/firefox/*.patch) ; do
  	  p=$(basename "$patch")
  	  quilt import -P "torbrowser/$p" "$patch"
  	done
  	git add debian/patches/torbrowser
  	TBB_COMMIT=$(git --git-dir=$TBB_SRC/.git rev-parse HEAD)
  	git commit -a -m "Import Torbrowser patches at commit ${TBB_COMMIT}."

* Remove from the quilt series, using `quilt delete`, the Torbrowser
  patches we don't want: see `debian/changelog` for the list of
  patches skipped last time, see the TBB Git log to make your opinion
  about new or updated patches, use common sense. Commit with
  a message explaining your decisions.

* Apply Torbrowser patches:

  	quilt push -a && git commit -a -m 'Apply Torbrowser patches.'
