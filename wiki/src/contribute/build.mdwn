[[!meta title="Building a Tails image"]]

[[!toc levels=2]]

One may want to [[contribute/customize]] her image before building.

Every following command must be run as `root`, at the root of the
source directory one has [[downloaded|Git]].

For the impatient ones:

	$ git clone git://git.immerda.ch/amnesia.git
	$ cd amnesia
	$ sudo su
	# lb clean --all && lb config && lb build

Dependencies
============

* `live-build` from Debian Squeeze.
* `syslinux` >= 4.01, so that the built ISO images are
  converted to hybrid ones: they can be either a CD-ROM or a hard disk
  (USB disk, etc.).
* `eatmydata` (e.g. from Debian sid), `time` and `whois` (for
  /usr/bin/mkpasswd) packages.
* `ikiwiki` 3.20110431 or newer; released images are built using a
  patched ikiwiki is needed so that
  the static version of the wiki included in the image has correct
  links to the online wiki; see this [wishlist
  item](http://ikiwiki.info/todo/mirrorlist_with_per-mirror_usedirs_settings/)
  to get the custom ikiwiki branch. It is not critical to use it
  unless you prepare real releases.
* `apt-get install libyaml-perl libyaml-libyaml-perl po4a perlmagick
  libyaml-syck-perl` so that the wiki builds smoothly.
* `dpkg-dev`

Build process
=============

## Customize the build process if needed

If you need to set custom build settings that are specific to your
local environment, such as a custom Debian mirror or APT proxy, you
probably want to configure live-build a bit.

The most common customizations are documented on this wiki:

* to avoid compressing the SquashFS using XZ (efficient, but very
  slow), `export MKSQUASHFS_OPTIONS='-comp gzip'` in your
  build environment;
* [[using a custom Debian mirror to build Tails
  images|build/custom_mirror]];
* [[using squid-deb-proxy to build Tails images|build/squid-deb-proxy]].

More documentation about this can be found in the [Debian Live
Manual](http://live.debian.net/manual/en/).

## Initialize the Live system's configuration

Initialize the Live system's configuration with `lb config` in a
**clean** build tree. Most `lb config` options are supported, have a
look to the `lb_config(1)` manpage for details.

## Build the system

You can then use the standard live-build commands as root to build
the image (`lb build`) and to cleanup the build directory (`lb
clean`).

## More information

More documentation about the build process can be found in the [Debian
Live Manual](http://live.debian.net/manual/en/).
