[[!toc levels=2]]

Rationale
=========

I2P is yet another anonymizing network (load-balanced unspoofable
packet switching network) that provides access to eepsites (.i2p tld);
eepsites are a bit like Tor hidden services. Some users would like to
be able to access eepsites from Tails.

Versions
========

Some release after 0.6 (most likely 0.7) will ship with
[I2P](http://www.i2pproject.net/) and have it nicely integrated with
Iceweasel so that eepsites (.i2p tld) can be reached through I2P, and
the rest through Tor.

Design
======

Unfortunately, I2P seems to not be very widely used yet, so it can be
assumed that not all of our users want to use (or even know about)
I2P. Some potential drawbacks for such users by having I2P start
automatically in each Tails session are:

1. increased network traffic due to relaying others' traffic (every
   I2P peer is a relay)

2. increased usage of the system CPU (lots of computationally heavy
   crypto is needed for relaying traffic) and RAM (Java based)

3. the possible raised suspicion from adversaries by being associated
   with yet another anonymity network (especially severe if one uses
   Tor bridges)

4. some level of system compromise through 0-day exploits in the I2P
   client

Hence, running I2P should be opt-in, i.e. it should not start per
default. The user must start I2P manually, either by some easily
accessible icon on the desktop/in the applications menu, or by
specifying so during boot (once we make that possible, see the
[[todo/boot_menu]] TODO page).

In addition to providing the I2P client, iceweasel should be able to
handle eepsites (.i2p tld) seamlessly without interfering with any
concurrent browsing through Tor.

The [standard I2P client](http://www.i2pproject.net/download.html) is
by default set up to perform automatic installs. Whether or not we
want this can be debated, but for the time being the most reasonable
option is to have it turned off. 

Implementation
==============

The [German Privacy Foundation](https://www.awxcnx.de/) has an [APT
repository](https://www.awxcnx.de/wabbel.htm) containing a prepackaged
binary of i2p. It installs the actual program into /usr/lib/i2p while
the so-called data directory is set up to /var/lib/i2p. This
separation is essential and was not possible some years
ago. Furthermore, this package installs an init script and sets up a user called
i2p-daemon which the init script starts the I2P client under, which is
good security-wise. 

The above package should be installed, but its init script should not
start during boot. An I2P shortcut has been added to the applications
menu which the user can use to start the I2P init script manually. A
side-effect of installing the actual I2P program into /usr is that
automatic updates are disabled by the program since the installation
directory is not writable by the i2p-daemon user.

For better performance an exception has been made in the [[firewall
configuration|Tor_enforcement/Network_filter]] that grants direct access to the
network for the I2P user running the client so it can reach the I2P
network directly, both through TCP and UDP. As per the standard I2P
configuration, UPnP will try to set up port-forwarding with any
present firewall so that full performance can be achieved.

The I2P router is configured to run in hidden mode: killing I2P
ungracefully is bad for the I2P network, and this is most likely
a prevalent behaviour among Tails users. For I2P to shutdown
gracefully, it needs up to 11 minutes to let all its current
participatory tunnels to expire. Killing I2P before that makes peers
using these participatory tunnels experience timeouts and disconnects,
which most definitely is bad for the network. Since Tails users are
likely to shutdown Tails quickly without waiting these 11 minutes,
this is a good reason to enable hidden mode, that is to disable
participating in I2P traffic:
[[!tails_gitweb config/chroot_local-includes/usr/share/i2p/router.config]].

[[FoxyProxy|todo/iceweasel_addon_-_FoxyProxy]] has been installed
system-wide, and the default iceweasel profile provides with a
configuration handling the I2P integration. FoxyProxy's whitelist
filter is used to make sure that the corresponding urls will be
proxied appropriately.

Below are the patterns that each url handeled by iceweasel will be
matched against. These patterns will be tried in order, from top to
bottom, until the first match is found:

1. The I2P router console: urls matching one of the
   `http://127.0.0.1:7657/*` and `http://localhost:7657/*` wildcard
   patterns will get a direct connection to the local host so the I2P
   router console can be reached.

2. I2P eepsites: urls matching the
   `^https?://[-a-zA-Z0-9.]+\.i2p(:[0-9]{1,5})?(/.*)?$` regexp will be
   proxied through the local eepsite HTTP proxy run by the I2P client.
   Implementation note: FoxyProxy encloses the regexps between `^` and
   `$` itself since `isMultiLine="false"`, that's why the regexp in
   `foxyproxy.xml` lacks these chars.

3. Tor HTTP(s): urls matching one of the `https://*` and `http://*`
   wildcard patterns will be proxied through polipo (and then its
   parent proxy, Tor).

4. The rest: all remaining urls will be SOCKS5-proxied through Tor.

Also, do note that Tails' [[netfilter-based
blocking|Tor_enforcement/Network_filter]] ensures that no Internet
traffic can be escape both Tor or I2P (and thus be non-anonymous) even
if something is wrong in the above filters (or a future revision).

Package source and upgrading I2P
================================

Tails uses the I2P (and deps) [Debian packages prepared by
KillYourTV](http://killyourtv.i2p.to/debian/), the official I2P Linux package
maintainer as listed on the
[I2P Team page](https://www.i2p2.de/team.html). The `i2p` source
package and its binaries must be uploaded
to our own [[APT repository|APT_repository]] as communications with
KillYourTV's repository are too slow for our builds.

Things to meditate upon
=======================

* Pattern 4 will catch ftp://.* and redirect them to Tor through
  SOCKS5. This effectively breaks FTP completely, so there's room for
  adding a pattern above number 4 which matches ftp connections
  (i.e. `^ftp://.*`) and proxies them through some ftp proxy using Tor
  as its parent proxy. See [[todo/FTP_in_Iceweasel]]. As an addition,
  at the moment (versions <=0.8) ftp does not work in I2P for
  technical reasons, so no pattern for that is needed.

* Do we want to enable the "Hidden mode" which completely disables
  participating traffic?

 - Pros:

  - the IP address will not be published in I2P's distributed NetDB so
    any adversary trying to enumerate all I2P users can only find the
    user if he or she happens to use the adversary as an entry to the I2P
    network. Hence the reason not to enable I2P per default due to
    increased suspicion (3) is somewhat alleviated.

  - there will be no additional network traffic used for relaying
    other I2P peers traffic, so the network traffic reason (1) for not
    starting I2P per default is essentially completely eliminated, and
    the CPU/RAM reason (2) is made considerably less severe.

 - Cons:

  - there's no "cover-traffic", which may decrease the anonymity
    somewhat.
   
* Are the patterns used above correct for their intended purposes?
  Does the FoxyProxy setup in any way open up for attacks? See
  [[todo/iceweasel_addon_-_FoxyProxy]].
