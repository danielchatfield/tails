[[!meta title="Git repositories"]]

<div id="intro">

<p>The Amnesic Incognito Live System and this documentation wiki are
developed in a bunch of Git repositories.</p>

<p><strong>Related pages</strong></p>

<ul>
  <li>[[contribute/merge_policy]]</li>
</ul>

<p><strong>Table of contents</strong></p>

[[!toc levels=3]]

</div>

Main repository
===============

This repository contains the Tails source code and the wiki source.

Anyone can check it out like this:

	git clone git://git.immerda.ch/amnesia.git

Developers with write access to the repositories should instead:

	git clone 'ssh://boum_org_amnesia@webmasters.boum.org/~/wiki.git'

We have a Gitweb available for [the main
repository](http://git.immerda.ch/?p=amnesia.git).

Branches
--------

Tails development uses several branches modeled a bit like the
Debian development process. Here they are.

### master

The `master` branch is used by the online wiki.

**FIXME**: document what should go in there, when other branches are
merged into it, etc.

### stable

The `stable` branch is intended to contain:

- the state of the code tagged for the last stable release
- fixes for security or important bugs.

Its purpose is to prepare minor releases.

### testing

The `testing` branch is used to prepare an imminent release: at some
point of the development process, the `devel` branch code is merged
into `testing`, freezed, and endures careful testing and bug-fixing
until this branch is considered good enough to become a stable
release. The `testing` branch is then merged into the `stable` and
`master` ones, images built and shipped and we go back to code shiny
new stuff in the `devel` branch.

Please note that the `testing` branch generally has not been granted
the same testing and attention as code that has made it into a
stable release: please use it for testing purposes but do not rely
on it for anything. No guarantee, blablabla.

### devel

Most of the development work that is done in Tails, is done in the
`devel` branch. This branch will never get released; instead, code
from it will be merged into testing and then into a real release.

Please note that the `devel` branch can be broken, have awful security
problems and so on. No guarantee, blablabla.

The `master` branch is merged into `devel` from time to time.

### Topic branches

We use topic branches called `bugfix/*` and
`feature/*`, respectively aimed at fixing a single bug and
implementing a single new feature. Once ready, a topic branch is
merged (with `--no-ff`) into the appropriate branch (generally
`devel`). Until it has been merged, a topic branch's history may be
rewritten, e.g. it may be rebased on top of `devel`.

Unless there are good reasons to do otherwise, bugfix branches must be
forked off the latest stable release tag, while feature branches
should are forked off the devel branch.

### experimental

Generally, it's `devel` plus a few topic branches merged in.
These topic branches are not ready enough to be merged into devel, but
we seriously would like to get them fit for the next stable release,
so this branch serves to test all these new features and bugfixes by
building / getting a single image. The history of this branch is
frequently rewritten and must no be used as the basis of
any development.

Please note that the `experimental` branch can be broken, have awful
security problems and so on. No guarantee, blablabla.

live-boot
=========

Anyone can check it out like this:

	git clone git://git.immerda.ch/tails_live-boot.git

Developers with write access to the repositories should instead:

	git clone 'ssh://git@git.immerda.ch/tails_live-boot.git'

We have a Gitweb available for [our custom
live-boot](http://git.immerda.ch/?p=tails_live-boot.git).

live-config
===========

Anyone can check it out like this:

	git clone git://git.immerda.ch/tails_live-config.git

Developers with write access to the repositories should instead:

	git clone 'ssh://git@git.immerda.ch/tails_live-config.git'

We have a Gitweb available for [our custom
live-config](http://git.immerda.ch/?p=tails_live-config.git).

liveusb-creator
=============

Anyone can check it out like this:

	git clone git://git.immerda.ch/tails/liveusb-creator.git

Developers with write access to the repositories should instead:

	git clone git@git.immerda.ch:tails/liveusb-creator.git

We have a Gitweb available for [liveusb-creator](http://git.immerda.ch/?p=tails/liveusb-creator.git).

tails-greeter
=============

Anyone can check it out like this:

	git clone git://git.immerda.ch/tails/tails-greeter.git

Developers with write access to the repositories should instead:

	git clone git@git.immerda.ch:tails/tails-greeter.git

We have a Gitweb available for [tails-greeter](http://git.immerda.ch/?p=tails/tails-greeter.git).

tails-persistence-setup
=======================

Anyone can check it out like this:

	git clone git://git.immerda.ch/tails/persistence-setup.git

Developers with write access to the repositories should instead:

	git clone 'git@git.immerda.ch:tails/persistence-setup.git'

We have a Gitweb available for [tails-persistence-setup](http://git.immerda.ch/?p=tails/persistence-setup.git).

Vidalia
=======

Anyone can check it out like this:

	git clone git://git.immerda.ch/tails_vidalia.git

Developers with write access to the repositories should instead:

	git clone 'ssh://git@git.immerda.ch/tails_vidalia.git'

We have a Gitweb available for [our custom
Vidalia](http://git.immerda.ch/?p=tails_vidalia.git).

FireGPG
=======

Anyone can check it out like this:

	git clone git://git.immerda.ch/tails/firegpg.git

Developers with write access to the repositories should instead:

	git clone 'ssh://git@git.immerda.ch/tails/firegpg.git'

We have a Gitweb available for [our custom
FireGPG](http://git.immerda.ch/?p=tails/firegpg.git).

htp
===

Anyone can check it out like this:

	git clone git://git.immerda.ch/tails_htp.git

Developers with write access to the repositories should instead:

	git clone ssh://git@git.immerda.ch/tails_htp.git

We have a Gitweb available for [our custom
htp](http://git.immerda.ch/?p=tails_htp.git).

icedove
=======

Anyone can check it out like this:

	git clone git://labs.riseup.net/tails_icedove.git

Developers with write access to the repositories should instead:

	git clone gitosis@labs.riseup.net:tails_icedove.git

Caution!
========

If you want to commit patches that may be published later, you might
want to anonymize them a bit; to do so, run the following commands
in every of your local clones' directories:

	git config user.name 'Tails developers'
	git config user.email amnesia@boum.org

If you intend to prepare Tails releases, you'll also need to make
the development team signing key the default one for Git tags:

	git config user.signingkey BE2CD9C1
