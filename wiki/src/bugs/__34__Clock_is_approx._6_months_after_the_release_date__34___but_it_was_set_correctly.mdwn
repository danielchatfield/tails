Here's a patch for /etc/NetworkManager/dispatcher.d/50-htp.sh

    39d38
    < 	mail.riseup.net
    177c176
    < 	if [ "$(($release_date_secs + 259200))" -lt "$current_date_secs" ]; then
    ---
    > 	if [ "$(($release_date_secs + 15552000))" -lt "$current_date_secs" ]; then

For the last two days, mail.riseup.net is frequently failing, triggering htpdate's paranoid mode. Thus /usr/local/sbin/htpdate returns an error to 50-htp.sh, which checks is_clock_way_off and finds the clock is more than 3 days (rather than the intended 180 days) later than Tails 0.8 release date. 

So, Tails boots up with the hardware clock set correctly, sets the software clock back to September 16, and then can't connect to Tor.

Output at /var/log/htpdate.log looks something like this:

    Running htpdate.
    https://ssl.scroogle.org (took 1s) => diff = 1 second(s)
    https://www.torproject.org (took 1s) => diff = 1 second(s)
    No downloaded files can be found
    No file could be downloaded from https://mail.riseup.net.
    Paranoid mode: aborting as one server ( https://mail.riseup.net ) could not be reached
    Clock is approx. 6 months after the release date
    Running htpdate.
    https://ssl.scroogle.org (took 1s) => diff = 1000000 second(s)
    https://www.torproject.org (took 1s) => diff = 1000000 second(s)
    No downloaded files can be found
    No file could be downloaded from https://mail.riseup.net.
    Paranoid mode: aborting as one server ( https://mail.riseup.net ) could not be reached
    htpdate exited with return code 25

If you're going to use paranoid mode, then you should stick to the most reliable servers. Apparently mail.riseup.net cannot always handle the traffic.

> The problem is fixed now, but It was not mail.riseup.net being
> unable to handle the traffic. Between 2011-09-28 and 2011-09-29
> mail.riseup.net resolved to {204.13.164.27, 204.13.164.32,
> 204.13.164.33, 198.252.153.55, 198.252.153.56} (now it only resolves
> to the two last ones). The problem was that 204.13.164.x did a HTTP
> 302 redirect to fulvetta.riseup.net or fruiteater.riseup.net. These
> we're not in /etc/hosts and thus had to be resolved with pdnsd which
> uses Tor, which wasn't started yet so it failed (there's also an
> iframe from user.riseup.net which doesn't resolve and thus doesn't
> download -- it doesn't make wget fail, but it's very
> fingerprintable).

> Also, we made htpdate pass "--dns-timeout 1" to wget to workaround a
> weird issue with we had with some other time sources (see commit
> e291af5), so even if we would have a real, working DNS server
> available for the htp user when it runs wget, this would fail if the
> time required to query the DNS server is longer than one second.

> I think the /etc/hosts approach needs to be reconsidered -- the
> current solution is too hackish and far from robust (and also
> fingerprintable). The best would be, I suppose, per-process DNS
> settings. I'm not aware of any tool with such capabilities so I
> assume we'd have to write a libresolv wrapper which shouldn't be
> _too_ difficult, but the question is if we want to maintain
> something like that. Another solution would be to temporarily set
> the DNS server got through DHCP in /etc/resolv.conf (dangerous!?).

>> The way we'll solve this class of issues is [[documented
>> there|todo/remove_the_htp_user_firewall_exception]]. Closing this
>> bug as a duplicate of what we already know we have to do.

I'm reopening this because the closer showed no acknowledgment of the 3-day problem in /etc/NetworkManager/dispatcher.d/50-htp.sh

DNS resolution aside, you still need to apply this patch:

    177c176
    < 	if [ "$(($release_date_secs + 259200))" -lt "$current_date_secs" ]; then
    ---
    > 	if [ "$(($release_date_secs + 15552000))" -lt "$current_date_secs" ]; then

>>> Right. Applied to feature/tordate branch, thanks!

[[!tag pending]]

