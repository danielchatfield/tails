------------------------------------------------------------
revno: 245
committer: T(A)ILS developper <amnesia@boum.org>
branch nick: trunk
timestamp: Sat 2011-01-29 14:41:38 +0100
message:
  Add an option to iconify the keyboard window on close
  
  If the gconf key /apps/onboard/iconify_on_close is set to True, then when one click on the keyboard window, it gets iconified rather than the application being closed.
diff:
=== modified file 'Onboard/Config.py'
--- Onboard/Config.py	2010-02-17 14:45:58 +0000
+++ Onboard/Config.py	2011-01-29 13:41:38 +0000
@@ -26,6 +26,7 @@
 SNIPPETS_GCONF_KEY          = "/apps/onboard/snippets"
 SHOW_STATUS_ICON_GCONF_KEY  = "/apps/onboard/use_status_icon"
 START_MINIMIZED_GCONF_KEY   = "/apps/onboard/start_minimized"
+ICONIFY_ON_CLOSE_GCONF_KEY  = "/apps/onboard/iconify_on_close"
 
 KEYBOARD_DEFAULT_HEIGHT   = 800
 KEYBOARD_DEFAULT_WIDTH    = 300
@@ -149,6 +150,8 @@
                 self._icp_position_change_notify_cb)
         self._gconf_client.notify_add(START_MINIMIZED_GCONF_KEY,
                 self._start_minimized_notify_cb)
+        self._gconf_client.notify_add(ICONIFY_ON_CLOSE_GCONF_KEY,
+                self._iconify_on_close_notify_cb)
         self._gconf_client.notify_add(SNIPPETS_GCONF_KEY,
                 self._snippets_notify_cb)
 
@@ -588,6 +591,39 @@
         for callback in self._start_minimized_callbacks:
             callback(self.start_minimized)
 
+    #### Iconify on close ####
+    _iconify_on_close_callbacks = []
+    def _get_iconify_on_close(self):
+        """
+        Iconify on close getter.
+        """
+        return self._gconf_client.get_bool(ICONIFY_ON_CLOSE_GCONF_KEY)
+    def _set_iconify_on_close(self, value):
+        """
+        Iconify on close setter.
+        """
+        return self._gconf_client.set_bool(ICONIFY_ON_CLOSE_GCONF_KEY, value)
+    iconify_on_close = property(_get_iconify_on_close, _set_iconify_on_close)
+
+    def iconify_on_close_notify_add(self, callback):
+        """
+        Register callback to be run when the iconify on close option changes.
+
+        Callbacks are called with the new list as a parameter.
+
+        @type  callback: function
+        @param callback: callback to call on change
+        """
+        self._iconify_on_close_callbacks.append(callback)
+
+    def _iconify_on_close_notify_cb(self, client, cxion_id, entry,
+            user_data):
+        """
+        Recieve status icon visibility notifications from gconf and run callbacks.
+        """
+        for callback in self._iconify_on_close_callbacks:
+            callback(self.iconify_on_close)
+
     def _get_kbd_render_mixin(self):
         __import__(self._kbd_render_mixin_mod)
         return getattr(sys.modules[self._kbd_render_mixin_mod],

=== modified file 'Onboard/KbdWindow.py'
--- Onboard/KbdWindow.py	2010-08-19 10:11:26 +0000
+++ Onboard/KbdWindow.py	2011-01-29 13:41:38 +0000
@@ -156,7 +156,10 @@
         KbdWindowBase.__init__(self)
         gobject.signal_new("quit-onboard", KbdWindow, gobject.SIGNAL_RUN_LAST,
                 gobject.TYPE_BOOLEAN, ())
-        self.connect("delete-event", self._emit_quit_onboard)
+        if config.iconify_on_close:
+            self.connect("delete-event", self._iconify_on_delete)
+        else:
+            self.connect("delete-event", self._emit_quit_onboard)
 
     def save_size_and_position(self):
         """
@@ -174,3 +177,7 @@
 
     def _emit_quit_onboard(self, event, data=None):
         self.emit("quit-onboard")
+
+    def _iconify_on_delete(self, widget, data=None):
+        self.iconify()
+        return True
