[[!toc levels=3]]

The following things could try to automate the login to the hotspot
so that the unsafe browser only is necessary as a fall back.

Using WWW::Mechanize::Shell
---------------------------

For each kind of hotspot:

* list of possible ESSID
* optional: allocated IP address classes
* optional: network test script?
* optional: SSL certificate fingerprint?
* a WWW::Mechanize::Shell script

Main script in in /etc/NetworkManager/dispatcher.d.

Test current connection against known hotspots.

When connected to a known hotspot, starts WWW::Mechanize::Shell
script. Values are entered through a callback than will uses
Gtk2::Notify and some custom widgets. Known login/passwords should be
put in gnome-keyring with a browser like completion system (enter
first letters, pick login, password is prefilled). Maybe we could use
the same login/password database as Epiphany.

For hotspots that requires a periodic refresh, we can run another
WWW::Mechanize::Shell script in a loop. NetworkManager is meanwhile
monitored through DBUS to kill the loop if connection is lost. If loop
fails try once more through default script before displaying a
notification.

Existing hotspot connection applications
----------------------------------------

Looks like there is at least two Python apps doing this already:

* [autowifi](http://www.manatlan.com/page/autowifi)
* [autologin-applet](http://antoine.mairesse.free.fr/autologin-applet/)

Captive portal detection
------------------------

hellais and friends are working on
[ooni-probe](https://gitweb.torproject.org/ooni-probe.git) which may be
interesting, depeding on how stealthy the probe is.

Beta testers
============

* San Bergmans <info@sbprojects.com>: FON network, KPN hotspots in the
  Netherlands

[[!tag todo/research]]
