When user have enabled persistence, it could be nice to remember which
extra packages they have installed.

We propose to use the term "your additional software" to mention to the
user those packages in the GUI, notifications, etc.

[[!toc levels=2]]

1st step: implement required backend
====================================

Approach: offline install of a package list, upgrade when/if a working Internet
connection appears later

- store in persitence root a file containing a list of packages to install from
  persistence (e.g. `live-persistent-packageslist.conf`)
- install packages possibly offline after the greeter and before the session
  starts with `apt-get install --force-yes` (might break some packages, but
  should be OK for most) but without `apt-get upgrade`
- once network pops up, if the packages persistence is enabled, look for
  upgrades (`apt-get update`, `apt-get install $PACKAGELIST`). For some
  packages (e.g. already running app) the change will only be effective at next
  boot but a outdated version won't stay too long.

This is done in the branch `feature/remember_installed_packages`,
and was merged for Tails 0.18.

2nd step
========

- when the notification fails, logging stdout/stderr/returncode
  of the tails-notify-user
- filter out empty lines from the conf file: else, APT is called in
  a way that makes it crash
- explain the user that most APT lists expire after a week or so, and
  that will make offline packages installation fail after a while
- move the args we always want to pass to apt-get (`--yes` and
  `--quiet`) into `_launch_apt_get`.
- verify the need of a custom apt-get PATH and add a comment to explain if
  it's really needed.

Fixed in `feature/remember_installed_packages`, but the whole feature
is broken and thus not testable in current experimental, so back to
[[!taglink todo/code]].

3rd step: have it work with read-only persistence
=================================================

Apt wants to create `/var/cache/archive/pkgcache.bin` near the root of
an aufs mount (but outside it). Unfortunaly, the kernel doesn'l like that.

    # touch /var/cache/apt/packages.bin
    aufs au_lkup_neg:326:touch[<PID>]: I/O Error, apt should be negative on b0

Some code exists in `feature/fix_apt-get_with_RO_persistence`, to be [[!taglink todo/test]]ed.

4th step
========

## Opt-out additionnal software packages greeter option

Allow to opt-out of the installation of these packages in the greeter [[!taglink todo/code]]

## GUI to edit additional software packages configuration

Design and implement a nice GUI to select additional software packages to make persistent
persistent (possibly among those that have been installed during
session).

Proposal:

- (preemble) merge the 3 APT persistence options : APT lists cache, APT packages cache,
  additional software packages
- when Alice (logged with administrative privileges with additional software
  persistence setup) installs a package, she gets a notification "Do you want to
  reinstall this software package next time you boot Tails?" with a button to add
  this package to additional software packages
- when Alice removes a packages incuded in additional software packages, the
  package is removed from the list of additional software packages and she
  gets a notification "The software package was removed from your additional
  software.".

Past research
=============

Possible interfaces
-------------------

### 1

Either in the greeter or upon login, an
interface could appear offering the user to select which packages should be
reinstalled (all unselected by default).

Having this choice in the greeter could allow users to install their preferred
software without having an administrative password set.

> This interface would quickly become messy, as soon as a desired
> additional package pulls dozens (if not hundreds) of dependencies.

### 2

Alternative idea: in tails-persistence-setup, allow selecting
packages (among the ones additionally installed during the current
session, and/or offer a "All installed additional packages"
option) to be automatically re-installed next time. Then, at boot
time, when persistence is enabled, our live-persistence script (or
something else started from tails-greeter) would (unconditionally?)
read this packages list from the persistent volume and install them.

Things to think about
---------------------

- security implications of this whole idea needs to be researched before
  diving in the code.

> since the cached APT packages are
> hand picked by the user, security will depend on these packages and
> security of the persistent volume where the *.deb are going to be
> stored. Am I missing something here?

- how to answer pontential apt/dpkg/debconf questions? record answers? force yes?

- re-install these packages from cache only, or prefer fetching more up-to-date
  versions from online mirrors if available? If we want to fetch updates, when
  should the install start? Think about offline usage and about network
  fingerprint.

- should the packages been installed before starting the session (required for
  packages related to session modification e.g. `msva-perl`) or after (e.g.
  requiring network, like firmware downloader)

[[!tag todo/research]]

Possible implementation tricks
------------------------------

### Installing at startup, then upgrading

One solution to the upgrad/offline use problem might be to install the packages
at from cache at startup, then to try to fetch upgrades and install them if
network appears.

### Creating a list of user-installed packages

A configuration snippet can be add in `/etc/apt/apt.conf.d` with a
`Dpkg::Post-Invoke` option. This allows to trigger a script each time
APT is run.

This script should query APT database and record all packages that are
not in `autoinstall` state.

On boot time, that list should be filtered with packages that are already
shipped with Tails.

> Here's an example script which filters shipped packages on runtime instead:
> 
    comm -23 <(list-manually-installed-packages) <default-packages.txt >session-packages.txt
    comm -23 <(cat session-packages.txt|sort) <(cat saved-packages.txt|sort) >> saved-packages.txt
> 
> It mantains a list of packages manually installed by the user in saved-packages.txt. This file should be placed in its own directory so it can be made persistent.
>
> list-manually-installed-packages is another script which does what its name says. In squeeze it can be done with:
>
    comm -3 <(dpkg -l | grep '^ii' | cut -d\  -f 3|sort) <(apt-mark showauto|sort)
>
> When we move to wheezy it may simply become 'apt-mark showmanual', if it proves to be equivalent.
>
> default-packages.txt is the list of packages shipped with Tails, generated at ISO creation time with list-manually-installed-packages
>
> session-packages.txt is a temporary file, can be placed in /tmp

[[!tag release/2.0]]
