[[!toc levels=2]]

Bugs
====

Report the udisks vs. partition attributes bug
----------------------------------------------

Creating or deleting a second partition using udisks resets the first partition's attributes.

Normal output is:

	$ sgdisk /dev/sdb --attributes=1:show
	1:2:1 (legacy BIOS bootable)
	1:60:1 (read-only)
	1:62:1 (hidden)
	1:63:1 (do not automount)

After creating a second partition, the output is empty.

As documented on the [syslinux
wiki](http://www.syslinux.org/wiki/index.php/Common_Problems#Missing_OS_.28gptmbr.bin.29),
trying to boot such a broken stick results in the `Missing OS` message
and no boot.

`tails-persistence-setup`, that creates the persistence partition,
workarounds this, but we must report this bug upstream.

Later
=====

* Remove devices from the list when unplugged.
* Set cursor to waiting (hourglass) state while working.
* *Target Device* list: display more information, such as the stick
  brand and model.
* If stick is <1.5GB case, support installing but don't show the
  persistence checkbox
* Allow setting the system/overlay partitions size via command-line
  option(s).
* Add Tails to the downloadable images list.
* Allow vendors to set
  - default release to download
  - list of downloadable files
* When run from inside Tails, provide an opt-in option to download the
  ISO outside Tor.
* GPG signature verification
  - verify GPG signatures delivered with iso images (see verify_iso_sha1 called in gui.py)
  - Debian provides gpgv-win32 that can be used on Windows
- command-line option --local-hard-disks that would enable
  installation on local hard disks (= not external USB);
  is half-implemented by `--force`, see special casing in the
  detect_removable_devices method.
* currently lists all partitions on the same USB stick. What should it
  do instead?
  - if one of those partitions is labelled `Tails`, and we're
    upgrading, it probably makes sense hiding other partitions on the
    same physical device

Windows support?
----------------

As [[documented already|doc/first_steps/manual_usb_installation/windows]],
the basic Tails install onto a USB stick from Windows is already easy
to do.

Therefore, even if our installer does not run on Windows / until it
does, those who want to get a "standard" install of Tails on USB can
either burn a CD or use a "basic" install of Tails on USB, and then
run our installer in clone mode from Tails.

Proper Windows support would be welcome, though.

Try http://www.pyinstaller.org/ to create a single binary file for
Windows and for OS X. Include those binaries on Tails images?

Should be more explicit when no target device is available
----------------------------------------------------------

Empty list, no message, is not that easy to understand.
