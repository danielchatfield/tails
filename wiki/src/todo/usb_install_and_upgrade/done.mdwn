Here's what we've done so far, based on Fedora's liveusb-creator codebase.

[[!toc levels=2]]

Decide
======

default / minimal system partition size =

	Tails ISO = 1GB
	+ 3 * incremental upgrades (60MB) = 180MB
	=> let's say 1.5GB

Unprivileged mode
=================

- allow running without being root (opt-in command-line switch)
"mount -o loop" is not an option to run unprivileged. Only used in
LinuxLiveUSBCreator's extract_iso.

- use genisoimage's isoinfo to extract arbitrary files from an ISO9660
  image;
  * example uses in Python:
    · /usr/bin/ubuntu-iso (apt-get install ubuntu-dev-tools)
    · http://uniso.svn.sourceforge.net/viewvc/uniso/trunk/uniso?revision=7&view=markup
  * no support for recursive extraction, but can list FS content:
    isoinfo -f -R -J -i test.iso | grep '^/isolinux/'
  * in Debian and Fedora 
- bsdtar supports iso9660 thanks to libarchive; in Debian, not in Fedora
- http://pypi.python.org/pypi/pycdio/ (not in Debian)

Add Debian Live support
=======================

- detect a given ISO file contains a Debian Live system
  extract /.disk/info from ISO filesystem, `grep '^Debian GNU/Linux'`

Clone
=====

In Tails VM (virtualized CD), cloning to USB FAT32 partition works.

* fix cloning to FAT32 filesystem: move doc from binary_local-includes
  to chroot_local-includes

cloning from USB
----------------

- add --clone-running and --clone-medium options
- implement USBSource class
- update delete_liveos to fix full upgrade usecase
- Python for Windows is unable to delete read-only files; the way the
  current code deals with that only works for one level of directory
  depth (works for syslinux/*, but not for doc/*/*)

Branding
========

* Allow disabling the download feature.

Allow defaults/vendor/site configuration of the
window title, download widget title, and custom artwork.

Currently supported config options (in the "branding" section) are:

  - distribution: name used in window title and download widget title
  - header: pixmap displayed on top of the main dialog

These options can be set in /etc/liveusb-creator/{vendor,site}.ini.

Both Qt resources and regular paths are supported for the "header"
option:

	# Qt resource
	[branding]
	distribution = Tails
	header = :/tails-liveusb-header.png

	# Regular path
	[branding]
	distribution = Tails
	header = /path/to/tails-liveusb-header.png

* partition label (currently: FEDORA)

Misc
====

- fix string.encode('utf-8', 'replace')
- decode/encode popen commands output like creator's popen wrapper
- virer le QPixmap proxies dans pyuicc4_custom
- .desktop file uses `Icon=fedorausb.png` => use a more generic icon
  [intrigeri]
- write minimal manpage

User interface
==============

- confirmation dialog: all content previously stored on the target
  device will be "lost" (not securely erased, but still...)
   ==> code is mostly there, begining at
       gui.py:LiveUSBDialog.begin()
- keep or change the current way to warn and ask confirmation?
  ===> Keep
- UI: make it more clear when the user must confirm
  Rename the "Create" button to "Forward" or "Go on"?
  Add the "go forward" icon to the button? [intrigeri]

Launchers
---------

We need to pass the `-u` and `-n` switches in any case; specific modes
of operation need other switches:

   * Initial installation needs `-P` and `-m`, upgrade does not.
   * Cloning needs `--clone`, installing from ISO does not.

We have `.desktop` files for the following usecases:

 * Clone the currently running Tails onto a shiny new USB stick:
   `--clone -P -m`
 * Upgrade a (non-running) Tails system using a ISO file: no
   additional switch required.
 * Upgrade a (non-running) Tails system using another, fresher,
   running Tails: no additional switch required.

Note for later: having *Clone the currently running Tails system* as
an option in the UI would allow us separate usecases based on the
action to be done (install vs. upgrade) rather than based on the
source of the installation / upgrade.

Partitions
==========
  
- check extlinux exists on Windows
   -> http://www.ehow.com/how_7492668_create-ext2-partition-windows.html
   NOT GOING TO HAPPEN, there's nothing real/free/scriptable

In feature/ignore_source_device branch, based on the feature/partitioning one:
- remove the source device from the list of possible target devices
  when --clone and running from USB
- remove the device that contains the ISO file from the list

- create the system partition with the computed size
  (see `gpt` for details on how to do it using gdisk/sgdisk)
- create a suitable filesystem on the system partition
- detect existing Tails on selected installation medium and act
  accordingly
  (do not repartition the whole disk and format first partition only)

- allow replacing the overlay slider with a simple checkbox
  => Done in branch feature/persistence_checkbox
    (left to do: update pot/po files)
- allow hiding any persistence (overlay slider, persistence checkbox)
  => Done in branch feature/persistence_checkbox
- Don't ask to confirm before resetting the MBR when using
  `--partition`: done in 5028cb0.
- if stick size <1.5GB, error out in a user-friendly way [intrigeri]

Testing
=======

3.11.4-2~4.gbp9e95fa
--------------------

* cloning onto a USB stick that already has a FAT32 partition.
* installing onto a USB stick that has a MBR partition table, and no
  partition at all.
* installing onto a USB stick that already has a old-fashioned cat'd
  Tails on it, using the *Upgrade from running* function: warns this
  action is not supported, correctly directs the user to the
  *Clone* launcher.
* installing onto a USB stick that already has a old-fashioned cat'd
  Tails on it using the *Clone Tails* function.
* test cloning from USB on bare metal
* booting from a Tails installed by this installer
* upgrading from ISO file while running a Tails system
* upgrading from CD on bare metal
* cloning from CD on bare metal
* boot from a Tails upgraded by this installer
* test "emergency shutdown on boot medium removal" feature, on Tails
  system installed by this installer

### From Tails installed by this installer

* test cloning a running Tails that was itself installed using this
  installer, onto a USB stick that already has a old-fashioned cat'd
  Tails on it

3.11.4-6
--------

Most of this was run from a Tails system installed by this installer:

* cloning onto a USB stick
* cloning onto a USB stick that has a MBR partition table, and no
  partition at all.
* upgrading from running system
* upgrading from CD on bare metal
* cloning from CD on bare metal
* cloning onto a USB stick
* installing onto a USB stick that already has a old-fashioned cat'd
  Tails on it, using the *Upgrade from running* function: warns this
  action is not supported, correctly directs the user to the
  *Clone* launcher.
* cloning a running Tails onto a USB stick that already has
  a old-fashioned cat'd Tails on it
* upgrading from ISO file while running a Tails system
* test "emergency shutdown on boot medium removal" feature, on Tails
  system installed by this installer
* booting from a Tails installed by this installer
* boot from a Tails upgraded by this installer
