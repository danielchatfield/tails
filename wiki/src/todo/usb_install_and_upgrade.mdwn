Allow installing amnesia to a USB storage device

* from a running (CD or USB) amnesia system
* from another OS, using a downloaded ISO image

=> no need to distribute USB images anymore

specification
=============

* allow adding a second encrypted data partition, or at least leave
  room for it
* allow non-destructively upgrading the live system only, not touching
  the other partitions (use the iso + grub trick ? tar image
  + cp?)

research
========

[[!tag todo/research]]

booting methods
---------------

### syslinux hybrid image

Since 0.5 every T(A)ILS ISO image we ship now is a persistent one:

- it can be burnt to a CD;
- it also contains a full disk image (including partition table) and
  can thus be copied (using `dd`) to a USB stick; the USB stick's
  content is lost in the operation.

Successful tests:

* boot the resulting `test.iso` as a normal optical drive in
  VirtualBox
* boot the resulting `test.iso` as a KVM hard disk
* convert the resulting `test.iso`, posing as a HDD image, into the
  native VirtualBox disk format, using `VBoxManage
  convertfromraw -format VDI test.iso test.vdi`, then boot the
  resulting `test.vdi` disk image in VirtualBox
* `dd` the hybrid `test.iso` to a USB stick and boot it on
  a USB-boot-enabled computer.

Notes:

* the partition number may need to be 4, in order to be compatible
  with the BIOSes supporting only USB-Zip;
  [reference](http://syslinux.zytor.com/archives/2009-May/012380.html)
* the partition type may need to be `1c`, i.e. hidden FAT32 LBA;
  [reference](http://syslinux.zytor.com/archives/2009-May/012384.html)
* boot failures were experimented when testing without the `-entry
  4 -type 1c` options.

Conclusion: this is a nice way to get bootable USB images for almost
free.

### misc

* apart when using a setup able to boot an ISO image, one needs to
  copy the ISO's `live/` directory to the destination partition, and
  setup a bootloader there
* use grml's
  [patches to live-initramfs](http://git.grml.org/?p=live-initramfs-grml.git;a=tree;f=debian/patches) 
  to support directly booting an ISO image... merged in upstream Git,
  commit 6458a8862db68. Another of their patches (namely
  `07_support_findiso.dpatch`) adds support for the
  `findiso` boot parameter, which is needed for easy usage; this one
  has not been applied upstream yet; does it respect the
  `live-media=removable` boot parameter?
* Philip Hands' solution proposed on [[!debbug 534887]]
  uses extlinux chainloading the image's own bootloader

### Grub2

Grub 2 initial support has entered `live-helper` in commit
566d27904afb3715. Chainload the ISO from here?

(loopback) boot an iso image:

* http://www.linuxpedia.fr/doku.php/expert/boot_ubuntu_iso_grub2

frontend UI
-----------

* `live-installer` udeb and its `live-installer-launcher` desktop
  companion allows to run the Debian Installer from the bootloader;
  paraphrasing the manual: the "Live" Debian Installer flavour will
  proceed in an identical fashion to the normal installation but at
  the actual package installation stage, instead of using
  `debootstrap` to fetch and install packages, the "live" filesystem
  image is copied to the target. After this stage, the Debian
  Installer continues as normal, installing and configuring items such
  as bootloaders and local users, etc. This must be tested.
  [[!tag todo/test]]
* `live-boot`'s `todisk=DEVICE` boot parameter could be used to copy
  the entire read-only media to the specified device; the process
  could then be:
  1. boot from CD
  2. use some documentation or GUI to partition the USB stick and take
     note of its device name
  3. reboot; at syslinux prompt add the `todisk=DEVICE` parameter
     using the previously noted device name; then let the system boot
     once from the USB stick, and use some documentation or GUI to
     install a bootloader on the USB stick. This step might be
     automated in live-boot.
  4. reboot and eject the CD: the system should now boot from USB.
* Incognito's `root_overlay/usr/sbin/create-usb` seems quite nice, as
  it allows using an existing fat32 partition, but it does not
  proposes to partition the USB device first. Their own
  [TODO](https://tor-svn.freehaven.net/svn/incognito/trunk/TODO)
  contains some nice ideas about the current topic.
* Liberté Linux' `burn-usb` creates a FAT32 partition for data and
  an ext2 partition where it copies the system to. It installs Grub on
  the USB stick.
* Ubuntu's [usb-creator](FIXME)
   - supposed to replicate exactly the CD to USB
   - does not seem to recognize non-Ubuntu CDs (0.1.16 crashes on
     Lenny, 0.1.10 does not display them in the GUI even if it the
     console output proves that it takes good note of their presence )
   - how does it handle partitions?
   - [launchpad](https://launchpad.net/usb-creator)
* [UNetbootin](http://unetbootin.sourceforge.net/)
   - works on Windows and GNU/Linux
   - has a plugin architecture in case we need new or custom features
   - included in squeeze and sid, easily backported to Lenny
   - works like a charm to install an ISO image to USB, but the
     syslinux menu has the unetbootin logo instead of Debian's one
   - non-destructive install: does not format the chosen partition
   - works from a running Live CD; specify /dev/cdrom as ISO diskimage
   - **TRY ME**: .img image to USB?
* [Ubuntu LiveUSB](http://klik.atekon.de/liveusb/)
   - (a bit too) simplistic
   - dedicated to "create a bootable Live USB medium from a running
     Ubuntu Live CD"
   - depending on sources, it partitions USB stick with one single
     800MB partition or one partition using the whole device; in any
     case, it unconditionally overwrites the device's content
   - able to upgrade without re-partitioning the device?
   - [launchpad](https://launchpad.net/liveusb)
* sidux's `install-sidux-usb-gui` needs an input ISO, but it still
  deserves being looked at more thoroughly; see the
  [manual](http://manual.sidux.com/en/hd-install-opts-en.htm#usb-hd).
* Fedora's `livecd-iso-to-disk`:
   - [manual](http://fedoraproject.org/wiki/FedoraLiveCD/USBHowTo)
* Fedora's [liveusb-creator](https://fedorahosted.org/liveusb-creator/):
   - works on Windows and GNU/Linux
   - "non-destructive install", which means?
   - sidux ships a modified version:
     which does not work on Lenny due to `dosfslabel` exiting with
     error code 1 even when successful
      - [.deb](http://sidux.office-vienna.at/sidux/debian/pool/main/l/liveusb-creator/),
      - [source](http://w3you.com/liveusb-creator/liveusb-creator.htm)
   - needs an ISO file, does not know how to read a real CD
* Moblin’s [Image
  Writer](http://git.moblin.org/cgit.cgi/moblin-image-creator/plain/image-writer)
* [Mandriva Seed](http://git.mandriva.com/?p=projects/mandriva-seed.git;a=summary)
* [RIP’s mkusb](http://rip.7bf.de/current/mkusb.sh) and its
  [README](http://rip.7bf.de/current/mkusb.txt)
* (SUSE kiwi's?) `usb-imagewriter`, available as a [PPA](https://launchpad.net/~ogra/+archive/ppa)
* <http://wubi-installer.org/>

partitionning
-------------

* Benjamin FOURTICQ's
  [script](http://www.mail-archive.com/debian-live@lists.debian.org/msg01832.html)
  to add a persistent home-rw partition.
