[[!comment format=mdwn
 ip="127.0.0.1"
 subject="Caveats to My Previous Post"
 date="2012-05-02T03:53:36Z"
 content="""
1.) If a drive is going to be encrypted, then filling it with zeros could make attacks on the encryption scheme easier by revealing the underlying structure of the drive. For this reason, using at least semi-/*pseudo*-randomized data is recommended. See:
http://pthree.org/2012/02/20/randomize-first-the-encrypt-your-block-device/ 

But for merely rendering data already on a drive unrecoverable, one pass of zeros should be sufficient.

2.) /dev/**r**andom could take *weeks* to fill a drive, whereas /dev/**u**random (*pseudo*-random) should take no more than \"mere\" *days*. (and /dev/*zero* would be done in a matter of *hours*, at most)

Anything more than /dev/**u**random is probably unnecessary and even /dev/urandom may be overkill, as various much faster alternatives may be adequate. These include `badblocks`, `shred` with only *one* iteration, or even using DBAN with the \"PRNG Stream\" option set to only *one* round.    

3.) Of course, all of the data has to *actually get overwritten*, something that, to the best of my understanding, no *software*-based utility can ensure with absolute certainty. 

(And if you think that additional passes increase the likelihood that all of the data gets overwritten, I'm afraid you are mistaken.)

DBAN does not wipe the HPA (host protected area), DCO (device controller overlay) or any bad sectors on a drive.

*ATA Secure Erase*, the wipe utility built-into drives, claims to wipe even HPA and DCO. But it's often locked by the BIOS.

Regarding DBAN, let me just note that by using expensive OnTrack recovery software, someone I know recovered thumbnails from an IDE drive that he had \"auto-nuked\" twice with DBAN. 

"""]]
