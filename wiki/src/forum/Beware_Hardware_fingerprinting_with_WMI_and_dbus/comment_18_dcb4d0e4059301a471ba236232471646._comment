[[!comment format=mdwn
 ip="127.0.0.1"
 subject="Java queries DBUS Kernel Hal subsystem in Linux (example code URLs)"
 date="2012-05-01T15:53:44Z"
 content="""
A Java library to read DBUS messages fired from the LINUX HAL subsystem.

While the Java code is OS agnostic, the DBUS interface requires a small native library, so presently this only runs on LINUX. (Library source is included if you wish to cross-compile.)

HAL is the Linux hardware abstraction layer. It provides an abstraction layer between the kernel and applications, enabling hardware plug-and-play support.

Java applications typically cannot directly query the hardware layer. This package provides a method to listen for HAL events. It enables plug-and-play actions in Java.

For example: when a particular USB device is plugged into the system, a JAVA-based listener is alerted with a 'deviceAdded' event and can take appropriate action ... like reading or writing to/from the device. Another example is ad-hoc networking, where network interfaces may be created and destroyed by the LINUX kernel depending upon network availability (cable plugged in, wireless LAN, etc.)

This bundle contains code from several sources. They are listed below by their package name.

cx.ath.matthew

    http://www.matthew.ath.cx/projects/java A selection of random support libraries for Java Copyright Matthew Johnson 2006 GNU Lesser General Public License version 2.1 

au.edu.jcu.haldbus

    http://code.google.com/p/sal/wiki/HALpackage Minimal Java classes to intercept DeviceAdded and DeviceRemoved emitted by the HAL daemon GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 

org.freedesktop.dbus

    http://dbus.freedesktop.org/doc/dbus-java/ A complete independent implementation of the D-Bus protocol in Java Academic Free License version 2.1 or GNU Lesser/Library General Public License version 2. 

For convenience, code is structured as a NetBeans project. A test class is also included that dumps HAL messages to the console. To run, import into NetBeans (>= 6.8), build and run the project either from within NetBeans or from the command line with the following:

java -jar \"HAL4Java.jar\"

The system will wait for add/remove events and dump their parameters to the screen. 
"""]]
