Hello everyone,

I am not a programer and Tails is my first linux, so let that serve as an explanation for any misconception to follow in this post.

I do however like to think about things that are and what they could become and normally occupy myself thinking about possible solutions/hacks for things even if I cannot implement them myself. While I believe (perhaps wrongly) I have a hacker's soul, my lack of technical skill not only prevents me from implementing them, but also may be just plain impossible or difficult to implement in the real world if the programs that exist just don't work that way.

Still, I have had this idea in my head that could be useful for live systems in general but specially tails ever since I suggested that bitcoin mining be included in tails.

https://tails.boum.org/forum/Bitcoin__47__Namecoin_Mining/

https://tails.boum.org/forum/Distributed_dictionary_for_hidden_services_and_namecoin/

Thing is, for bitcoin, namecoin or other blockchains to be properly supported in tails as well as freenet support which is apparently being considered (although IMHO GNUnet should be supported as well, or instead of, as at least from a not very informed POV appears way more secure - from my quick research attempts to protect against the global adversary, has vpn support and it does not need to use the IP protocol at all..), the implemented persistence is most likely insufficient.

https://tails.boum.org/todo/freenet_project/

Thus the concept of a new class of Persistence - Symbiotic Commensalistic Storage that I want to share and know what you think.

In case you don't know what a commensalistic relation is it is a biological relation between two organisms:

https://en.wikipedia.org/wiki/Commensalism

or in this context, a relationship between Tails and the host computer main OS, in which tails is benefited without causing harm (perhaps even good -mutualistic relationship then) to the main OS.

So it would work as follows, if I am incorrect in my assessment please tell me so (and why):

On a normal OS, windows for example but I believe also linux, when a file is deleted, it is not truly erased, a header or a tag is instead applied to the file which basically says that the file portion of the hard disk is available to be overwritten.

I think Tails could use this in the following way: Imagine that a program was created that substituted that space with encrypted blocks of data, while maintaining the header.

*/header/encrypted data block Nº1 */header/encrypted data block Nº2 */header/encrypted data block Nº3...

Such a program would store the location of the data in a given hard disk for a given computer in tails persistent volume as to quickly reconstitute/read the data.

The program would also (at the moment of storage of data) create a checksum for every encrypted data block and for every "contiguous" data group, as follows:

/block1/block2/block3/block4/block5/block6/block7...
*checksum1*checksum2*checksum3*checksum4*...

but also

/block1/block2/block3/block4/block5/block6/block7
*checksum1+2*checksum3+4*checksum5+6*checksum7+8*...

and also

/block1/block2/block3/block4/block5/block6/block7
*checksum1+2+3+4*checksum5+6+7+8*checksum9+10+11+12*...

and continuing...

In this way, it would be possible to (quickly? - by going from the checksums for the agglomerations of blocks to the individual blocks) ascertain which data was corrupt (by usage of the main OS, or a disk defrag) and had to be replaced.

Such a solution would be perfect I believe for non-sensitive data while permitting big amounts of storage - in theory, if free space is substituted by the *overwrite-me header, as much as all the hard drive of host computer or external hard disk.

This would therefore greatly benefit tails (and perhaps liberté linux) while not harming the host OS. It could be argued that it could help it as well...since it would be overwriting data in the hard drive that could be private, an due to the usage of tails, no longer so easily recoverable by data forensic techniques.

If data were stored in an encrypted form it would also protect the host OS from virus linux is immune to but windows is not for example - hopefully not a likely situation but as a proof of concept. The encryption would have to be broken before any of that could happen and even then such a malicious file would still have to get himself unerased since it was written in that form to start with.

Although the situation was thought for things like the bitcoin/namecoin blockchain, I believe it could also serve for other purposes, such as storage for Tahoe-Lafs, freenet and GNUnet. As long as it would be possible to divide the amount of stored data in small pieces and say to it: 

"Of the data you stored only 70% (for example) is still not corrupted. I can share this 70% but give me the 30% back, or new files to store in that space"

It would also have some fingerprinting issues as it would leave a mark on the host computer that tails, or other system/program that would use a similar concept had been used in that computer. It would have to be opt in, and most possibly offer a way to securely remove this mark from the pc if the user so wishes. Perhaps the wipe available diskspace from nautilus? A bit more problematic is it is a very new pc which has a solid state drive instead of a hard disk but still.. 

Well this is it. I believe this to be a useful idea for tails and as such I wanted to share it. I doubt it is perfect as it stands however, nor do I know if such a thing exists already..I know there are some encryption filesystems that do not guaranty that data is not lost so perhaps a similar thing already exists. I hope so. It would make implementing this new or a different commensalistic persistence that much easier, if it is deemed desirable.

I would love to hear your thoughts on such a system,

Cheers,

hypothesys
