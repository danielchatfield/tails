[[!comment format=mdwn
 username="str4d"
 ip="127.0.0.1"
 subject="comment 145"
 date="2012-10-25T15:58:08Z"
 content="""
>Well, that's where the subject of the thread becomes relevant: if the client is in hidden mode, then it is not listed in netDb, so there is nowhere an (eepSite) attacker can connect to in order to correlate clock skews. It is the same with Tor, as you noted, but Tor defaults to non-router mode, and running a relay on client is not recommended due to this and similar attacks.

Of course. Tor is lucky enough with its funding and publicity etc. that although it only has ~3k relays, the majority are high-bandwidth and support the vast number of transient clients it has. But that is also a design choice, since Tor was designed to enable semi-arbitrary numbers of clients to connect to the normal internet anonymously - a very different design goal than I2P.

> (how much are there, 2-3k?)

Try 16-20k =) We don't actually know exact numbers - the network is large enough that a single high-profile router can't even know all floodfills - but we estimate from quantities we can measure (some algorithms, news.xml fetches, and file downloads at update time - though the latter won't be feasible once update-via-torrent arrives).

> regarding how difficult the attack is actually to mount, that's a different issue. If the target is high-profile, you can monitor clock skew on all I2P routers for a long time, maybe even try active attacks with NTP packets (if some use NTP), etc. Maybe exploit some weakness in I2P's internal clock offset mechanism.

Entirely possible, but weaknesses are of course there to be fixed ^_^ A high-profile participating router at present can know several thousand routers, probably more if really opened out on a large connection. But long-term monitoring won't change much, given that the I2P routers keep a tight rein on the clock skew. I'm not sure if active NTP packet attacks would work, as I'm not completely familiar with the specifics of the clock update mechanism myself.
"""]]
