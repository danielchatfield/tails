[[!comment format=mdwn
 ip="127.0.0.1"
 subject="comment 19"
 date="2012-11-03T13:05:53Z"
 content="""
[@comment17](https://tails.boum.org/forum/Downloading_files/#comment-cc3ad30ac9b30be04bbc84ded177fbd9)

>I'm guessing that it's still possible for the file to have actually been malicious in some way. But how? I.e., what are some of the ways that extracting and then playing such a file could exploit and harm?

*The application may not take into account all of the possible boundary conditions (both those that conform to expected syntax and those that do not) and as such there exists the possibility of a buffer overflow which may allow execution of arbitrary code. Executing this potentially malicious code could lead to further exploits or sending of information that would compromise the user's anonymity.

*The application may interpret optional features in such a way that could harm the user. As an example, I believe older versions of the WMV format have an optional feature to open a specified webpage upon loading the file and some older players would do this without prompting the user. Visiting this potentially malicious website could lead to further exploits or collection of information that would compromise the user's anonymity.

Both of these attack vectors represent an overlooked or unsolved problem in multiple arbitrary applications.

The best practice is prevention. Do whatever you can to establish trust in the source of your downloaded file. Do whatever you can to verify the origin of your downloaded file. Do whatever you can to verify the content of your downloaded file. If you cannot manage all of these preventive measures, then don't touch the file until you have started a fresh live session with no network or persistence capabilities. Ideally you would encrypt the file with gpg and store it on an external HDD which contains nothing you can't afford to lose, no personally identifiable data, and does not implement any wear-leveling that might leave traces after a secure delete operation. However this still assumes you trust gpg to not contain problems as described in the above examples.
"""]]
